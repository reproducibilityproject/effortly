{"abstractText": "DOI 10.5281/zenodo.3959516 As part of the ReScience Ten Years Reproducibility Challenge, I sought to reproduce the analyses in Lamichhane et al. (2003). The bulk of the code and data were quickly identified, though there were a number of challenges in reconstructing the analysis steps. There was little documentation and rather quirky file organization. And the code for one figure was not present in the main project directory but rather was dis\u2010 covered in a separate directory with presentation slides. Nevertheless, the bulk of the results could be reproduced to within Monte Carlo sampling error, with just one small change to the code to avoid errors due to a change in R. One of the paper\u2019s fig\u2010 ures, however, could not be reproduced as the code for the computer simulations it presented could not be found.", "authors": [{"affiliations": [], "name": "Karl W. Broman"}, {"affiliations": [], "name": "Karthik Ram"}, {"affiliations": [], "name": "Leah Wang"}, {"affiliations": [], "name": "Peter Carbonetto"}], "id": "SP:b38b8b78b0327bba4c77629c586cfc770642481c", "references": [{"authors": ["G. Lamichhane", "M. Zignol", "N.J. Blades", "D.E. Geiman", "A. Dougherty", "K.W. Broman", "W.R. Bishai"], "title": "A postgenomic method for predicting essential genes at subsaturation levels of mutagenesis: application to My\u00ad cobacterium tuberculosis.", "venue": "Proc Natl Acad Sci USA", "year": 2003}, {"authors": ["N.J. Blades", "K.W. Broman"], "title": "Estimating the number of essential genes in a genome by random transposon mutagenesis", "venue": "Technical Report MS02-20. Baltimore, MD: Department of Biostatistics, Johns Hopkins University,", "year": 2002}, {"authors": ["R Core Team"], "title": "R: A Language and Environment for Statistical Computing", "venue": "R Foundation for Statistical Computing. Vienna, Austria,", "year": 2019}, {"authors": ["B.W. Kernighan", "D.M. Ritchie"], "title": "The C programming language", "venue": "2nd edition. Englewood Cliffs, NJ: Prentice Hall,", "year": 1988}, {"authors": ["K.W. Broman"], "title": "negenes: Estimating the Number of Essential Genes in a Genome", "venue": "R package version 1.0-12.", "year": 2019}, {"authors": ["L. Wall", "T. Christiansen", "J. Orwant"], "title": "Programming Perl", "venue": "3rd edition. Sebastopol, CA: O\u2019Reilly Media,", "year": 2000}, {"authors": ["H. Wickham", "P. Danenberg", "G. Cs\u00e1rdi", "M. Eugster"], "title": "roxygen2: In-Line Documentation for R", "venue": "R package version 7.0.2.", "year": 2019}, {"authors": ["G. Wilson", "J. Bryan", "K. Cranston", "J. Kitzes", "L. Nederbragt", "T.K. Teal"], "title": "Good enough practices in scientific computing.", "venue": "PLoS Comp Biol", "year": 2017}, {"authors": ["Y. Xie"], "title": "J", "venue": "Allaire, andG.Grolemund.RMarkdown: TheDefinitiveGuide. BocaRaton, FL: ChapmanandHall/CRC,", "year": 2018}, {"authors": ["J. Allaire", "Y. Xie", "J. McPherson", "J. Luraschi", "K. Ushey", "A. Atkins", "H. Wickham", "J. Cheng", "W. Chang", "R. Iannone"], "title": "rmarkdown: Dynamic Documents for R", "venue": "R package version 2.1.", "year": 2020}], "sections": [{"text": "R E S C I E N C E C Reproduction / Ten Years Reproducibility Challenge / Genetics\n[Rp] Reproducibility report: Identifying essential genes by mutagenesis\nKarl W. Broman1, ID 1Department of Biostatistics and Medical Informatics, University of Wisconsin\u2013Madison, Madison, Wisconsin, USA\nEdited by Karthik Ram ID\nReviewed by Leah Wang ID\nPeter Carbonetto ID\nReceived 17 February 2020\nPublished 24 July 2020\nDOI 10.5281/zenodo.3959516\nAs part of the ReScience Ten Years Reproducibility Challenge, I sought to reproduce the analyses in Lamichhane et al. (2003). The bulk of the code and data were quickly identified, though there were a number of challenges in reconstructing the analysis steps. There was little documentation and rather quirky file organization. And the code for one figure was not present in the main project directory but rather was dis\u2010 covered in a separate directory with presentation slides. Nevertheless, the bulk of the results could be reproduced to within Monte Carlo sampling error, with just one small change to the code to avoid errors due to a change in R. One of the paper\u2019s fig\u2010 ures, however, could not be reproduced as the code for the computer simulations it presented could not be found.\n1 Introduction\nLamichhane et al.1 described a Bayesian statistical method for estimating the number and identity of essential genes in a genome from data that indicates viablemutants. The genome of Mycobacterium tuberculosis was mutagenized with a transposon that inserted at known sites, and a library of viable mutants was characterized. If a mutant with insertion that disrupted a particular gene was viable, that gene was indicated to be non\u2010 essential. Essential genes are those for which no disruptive mutation could be viable.\nThe analysis method, described in further detail in Blades and Broman2, sought to es\u2010 timate the overall proportion of essential genes, and the probability that a gene was essential. We assumed a uniform prior distribution on the number of essential genes, and that genes were equally likely to be essential, and used Markov chain Monte Carlo (MCMC) to derive the posterior probabilities of genes being essential.\nAs part of the ReScience Ten Years Reproducibility Challenge, I sought to reproduce the analyses in the paper, which I conducted in 2002 while in the Department of Biostatis\u2010 tics at Johns Hopkins University. The bulk of the data and code were quickly identi\u2010 fied. (I keep collaborative projects in a directory ~/Projects and save old projects in compressed form in ~/Projects/Tar, and I immediately found the file Gyanu.tgz. Gyanu Lamichhane was first author on the paper.) However, there were a number of challenges in reconstructing the analysis steps, and the code used to conduct the com\u2010 puter simulations underlying Figure 3 from Lamichhane et al.1 appears lost; I found only the results and the code to generate the figure.\nCopyright \u00a9 2020 K.W. Broman, released under a Creative Commons Attribution 4.0 International license. Correspondence should be addressed to Karl W. Broman (broman@wisc.edu) The authors have declared that no competing interests exists. Code is available at https://github.com/kbroman/Paper_ReScience2020/ \u2013 DOI 10.5281/zenodo.3671998. \u2013 SWH swh:1:dir:277cad9553dc627f9a4047f38fc19ca1e76aee8c. Data is available at https://github.com/kbroman/Paper_ReScience2020/ \u2013 DOI 10.5281/zenodo.3671998.\nReScience C 6.1 (#12) \u2013 Broman 2020 1\nThe method was implemented in a combination of R [3] and C [4] and assembled as an R package, R/negenes [5], which is available on both GitHub and the Comprehensive R Archive Network (CRAN). The software used for the analyses in the paper are a set of R scripts, along with one Perl script [6] that extracted transposon insertion sites from the M. tuberculosis genome.\n2 Challenges\nThe first challenge in reproducing the analyses in Lamichhane et al.1 was to identify exactly what analyses needed to be reproduced. The project directory did not contain any documentation, and the file organization (Figure 1) was quirky and contained a number of ancillary analyses that did not end up in the paper. And so I had to resort to actually reading the original article.\nThere was some system behind the organization of the project files, but it would have benefited fromaReadMefile that explained the structure. The subdirectoriesConverge, Operons, Randomness, and Sims contain the ancillary analyses that did not end up in the paper. Rawdata contains the primary data files, Data contains derived data files, and R contains analysis scripts. But actually Rawdata, Data, and R contain files for an initial analysis of the data per\u2010 formed in July, 2002. The subdirectory Sept02 contains copies of those data and scripts for a revised analysis performed in September, 2002; many of the files are identical, but additional data had been added. Similarly, Nov02 contains further copies of the data and scripts for a further revised analysis performed in November, 2002.\nThe bulk of the results in the paper are those from Nov02. Table 2 from Lamichhane et al.1 includes results from Sept02 as well as Nov02. This was the primary challenge in reproducing the analyses: identifying which versions of the analysis scripts were used.\nThere were a number of further challenges in reproducing the results. The code to pro\u2010 duce Figure 1b from Lamichhane et al.1 (see Figure 3, below) was not present in the project directory, but rather was found in a separate directory, with files for a talk that I gave on the work.\nFurther, the key analyses involved Markov chain Monte Carlo (MCMC), but I had not saved the seeds for the random number generator, and so I am not able to reproduce the results exactly. Also, I did not save the key intermediate results to files, and I did not indicate which objects were produced by which scripts. Rather, I left objects in the R environment (saved in a .RData file and re\u2010loaded when R was invoked) and used them as needed without explaining where they had come from. Nevertheless, the analysis scripts were reasonably well named (prepareData.R, analysis.R, and figs4paper.R), and so the order of the analysis could be reconstructed without much difficulty.\nReScience C 6.1 (#12) \u2013 Broman 2020 2\n3 Code modifications\nThe original analysis was performed with R version 1.5.1 (2002\u201006\u201017); the reproduction used R version 3.6.2 (2019\u201012\u201012). The analysis scripts could be run with only one small modification. The output of the R function table(), which counts the values in a cat\u2010 egorical variable, is now an object of class table, whereas previously it had been a numeric array, and so I needed to insert a couple of as.numeric() calls to avoid er\u2010 rors.\nI also needed to make small changes regarding cutoffs controlling which results were shown in two key tables. Because I had not saved the seed for the random number generator, I was not able to reproduce the MCMC results exactly, and small differences in the estimated posterior probabilitiesmeant that I needed to change cutoffs from0.749 to 0.745 in order to display the same set of genes and gene families.\n4 The R/negenes package\nThe key software implementing the methods of Lamichhane et al.1 is in the R package, R/negenes [5], available on the Comprehensive R Archive Network (CRAN). The earliest version on CRAN is 0.98\u20103, dated 2002\u201008\u201010 and posted to CRAN on 2003\u201006\u201021. This is the version that was used for the analyses in the paper.\nThere have been twelve revisions posted to CRAN. The current version is 1.0\u201012, dated 2019\u201008\u201005, and this is the version I used to reproduce the results of the paper. The package is also available on GitHub, though I did not start using version control for the package until 2011\u201011\u201007.\nThe ChangeLog file summarizes the changes that have been made to the package. The only substantive change was on 2012\u201003\u201009, to fix a bug in which I was over\u2010running an array in C. The problem was identified by CRAN maintainers. Various maintenance changes have been made over the years, related to changing policies for R packages, including the introduction of the NAMESPACE file, which indicates user\u2010available func\u2010 tions, and registration of compiled routines. I also changed the documentation format to use Roxygen2 [7].\n5 Results\nIn this section, I present the results of my reproduction of the analyses in Lamichhane et al.1. I am not sure what hardware or operating system I used for the original analyses, but output files indicate I was using R version 1.5.1. For the reproduction, I used a System76 Oryx Pro laptop running Pop!_OS Linux 19.10 and R version 3.6.2.\nFigure 2 displays the reproduction of Figure 1a from Lamichhane et al.1. The left panel is the original figure; the right panel is the reproduction. This figure summarizes the locations of transposon insertion sites in each gene, which appear to be approximately uniformly distributed. The two versions of the figure are identical.\nFigure 3 is a reproduction of Figure 1b from Lamichhane et al.1, again with the original on the left and the reproduction on the right. This is the figure where the code was found in a separate directory, with slides for a talk. The figure shows the location of transposon insertion sites around the circular genome ofM. tuberculosis. Again, the two versions of the figure are identical.\nReScience C 6.1 (#12) \u2013 Broman 2020 3\nReScience C 6.1 (#12) \u2013 Broman 2020 4\nTable 1 is a reproduction of Table 2 from Lamichhane et al.1, showing the estimated pro\u2010 portion of essential genes inM. tuberculosis, along with 95% Bayesian credible intervals, using different rules for defining the part of the gene where viable transposon insertion would indicate that the gene is not essential. (By the 100% rule, we consider all trans\u2010 poson insertions; by the 80% rule, we only pay attention to insertions in the proximal 80% of a gene.) There is one apparent difference, highlighted in red: the upper limit of the 95% credible interval for the 60% rule changed from 50 to 49. As noted above, I had not saved the seed for the random number generator, and so I could not reproduce the exact MCMC results. The difference here can be ascribed to MCMC sampling error.\nFigure 4 is a reproduction of Figure 2 from Lamichhane et al.1, with the original on the left and the reproduction on the right. It shows the posterior probability of each gene being essential, against the number of transposon insertion sites in the gene. Genes with 0 posterior probability are those that exhibited a viable transposon insertion and so are deemed non\u2010essential; their values are jittered vertically. It is difficult to detect any differences between the two figures, other than in the random vertical jittering of the values at 0.\nThe original estimates of the posterior probabilities were available, and so we are able to make a detailed comparison of the differences between the original results and the reproduced values. Figure 5 shows the differences in percent posterior probability, be\u2010 tween the original and reproduced estimates. These are the difference between the y\u2010axis values in the two panels of Figure 4, multiplied by 100. For virtually all genes, the percent posterior probabilities differ by < 0.1%. The complex pattern in the differences is due to a combination of MCMC sampling error and overlap among genes (with some pairs of genes having shared transposon insertion sites).\nThe genes with highest posterior probability of being essential are shown in Table 2, a reproduction of Supplementary Table 6 from Lamichhane et al.1. (Table 3 in Lamich\u2010\nReScience C 6.1 (#12) \u2013 Broman 2020 5\nhane et al.1 showed just a subset of these, omitting those indicated with an asterisk.) The original and reproduced values, rounded to the nearest 1%, are identical.\nFinally, Table 3 is a reproduction of Table 4 from Lamichhane et al.1, concerning an investigation of gene families, to see whether particular families appeared to have an unusually high or low proportion of essential genes. A few small differences between the original and the reproduced values are highlighted in red: the enrichment probabil\u2010 ity for three families changed by \u00b11%, and the upper limit of the 95% credible interval for the percent essential genes in two families changed a bit. These changes can be ascribed to MCMC sampling error.\n6 Lessons\nMy efforts to reproduce the analyses for Lamichhane et al.1 were largely successful, but the process would have been considerably easier had I put a bit more effort into file organization anddocumentation. Thisworkmay serve as a useful case study to illustrate the need for Good enough practices in scientific computing [8].\nThe two most important lessons from this effort are to document your work, and to put all relevant scripts into a common project directory. The quirks of my file organization would have been more easily overcome if I had included a single ReadMe file that ex\u2010 plained things. And it was only by luck that I identified the code for one of the figures in a separate directory with slides for a talk.\nThe project organization would have been simpler had I adopted a formal version con\u2010 trol system like git. This would have allowedme to avoid the copy\u2010and\u2010mutate approach that led to the Sept02 and Nov02 subdirectories. I should have combined the multiple mutated versions of scripts into unified versions that provide the comprehensive set of analysis results for the paper and relied on the version control system to document the history of changes. A unified analysis script, or even better a reproducible document such as in R Markdown [9, 10], would have made the workflow more transparent.\nFor analyses that rely on random number generation, storing the seeds could enable exact reproduction of the results. I should have also saved intermediate results to files\nReScience C 6.1 (#12) \u2013 Broman 2020 6\nand loaded them at the top of scripts that depended on them.\nFinally, I should have documented the provenance of the primary data files, such as that for the M. tuberculosis genome."}], "title": "[Rp] Reproducibility report: Identifying essential genes by mutagenesis", "year": 2020}