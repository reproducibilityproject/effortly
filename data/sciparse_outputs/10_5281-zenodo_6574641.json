{"abstractText": "We aim to replicate the main findings of the paper SCOUTER: Slot Attention-based Classifier for Explainable Image Recognition by Li et al. in order to verify the main claims they make: 1) The explanations generated by SCOUTER outperform those by other explana\u2010 tion methods in several explanation evaluation metrics. 2) SCOUTER achieves similar classification accuracy as a fully connected model. 3) SCOUTER achieves higher confu\u2010 sion matrix metrics than a fully connected model on a binary classification problem.", "authors": [{"affiliations": [], "name": "Maarten Burger"}, {"affiliations": [], "name": "Kaya ter Burg"}, {"affiliations": [], "name": "Sam Titarsolej"}, {"affiliations": [], "name": "Selina Jasmin Khan"}, {"affiliations": [], "name": "Koustuv Sinha"}, {"affiliations": [], "name": "Sharath Chandra Raparthy"}], "id": "SP:15b2b4676d9afb1f8c4dbe5abe72be88688c78cd", "references": [{"authors": ["J. Chang", "J. Lee", "A. Ha", "Y.S. Han", "E. Bak", "S. Choi", "J.M. Yun", "U. Kang", "I.H. Shin", "J.Y. Shin"], "title": "Explaining the rationale of deep learning glaucoma decisions with adversarial examples.", "venue": "Ophthalmology", "year": 2021}, {"authors": ["L. Li", "B. Wang", "M. Verma", "Y. Nakashima", "R. Kawasaki", "H. Nagahara"], "title": "SCOUTER: Slot Attention-based Classifier for Explainable Image Recognition.", "venue": "CoRR abs/2009.06138", "year": 2020}, {"authors": ["K. He", "X. Zhang", "S. Ren"], "title": "and J", "venue": "Sun. \u201cDeep residual learning for image recognition.\u201d In: Proceedings of the IEEE conference on computer vision and pattern recognition.", "year": 2016}, {"authors": ["V. Petsiuk", "A. Das"], "title": "and K", "venue": "Saenko. \u201cRISE: Randomized Input Sampling for Explanation of Black-box Models.\u201d In: Proceedings of the British Machine Vision Conference (BMVC).", "year": 2018}, {"authors": ["Z. Qi", "S. Khorram"], "title": "and F", "venue": "Li. \u201cVisualizing Deep Networks by Optimizing with Integrated Gradients.\u201d In: CVPR Workshops. Vol. 2.", "year": 2019}, {"authors": ["K. Schulz", "L. Sixt", "F. Tombari", "T. Landgraf"], "title": "Restricting the flow: Information bottlenecks for attribution.", "venue": "arXiv preprint arXiv:2001.00396", "year": 2020}, {"authors": ["J. Deng", "W. Dong", "R. Socher", "L.-J. Li", "K. Li"], "title": "and L", "venue": "Fei-Fei. \u201cImagenet: A large-scale hierarchical image database.\u201d In: 2009 IEEE conference on computer vision and pattern recognition. Ieee.", "year": 2009}, {"authors": ["S. Karaoglu", "R. Tao"], "title": "J", "venue": "van Gemert, and T. Gevers. \u201cCon-Text: Text Detection for Fine-grained Object Classification.\u201d In: IEEE Transactions on Image Processing (TIP).", "year": 2017}, {"authors": ["C. Wah", "S. Branson", "P. Welinder", "P. Perona", "S. Belongie"], "title": "The Caltech-UCSD Birds-200-2011 Dataset", "venue": "Tech. rep. CNS-TR-2011-001. California Institute of Technology,", "year": 2011}, {"authors": ["A. Diaz-Pinto", "S. Morales", "V. Naranjo", "T. K\u00f6hler", "J.M. Mossi", "A. Navea"], "title": "CNNs for Automatic Glaucoma Assessment using Fundus Images: An Extensive Validation", "venue": "Mar.", "year": 2019}, {"authors": ["C.-K. Yeh", "C.-Y. Hsieh", "A. Suggala", "D.I. Inouye", "P.K. Ravikumar"], "title": "On the (in) fidelity and sensitivity of explanations.", "venue": "Advances in Neural Information Processing Systems", "year": 2019}, {"authors": ["F. Locatello", "D. Weissenborn", "T. Unterthiner", "A. Mahendran", "G. Heigold", "J. Uszkoreit", "A. Dosovitskiy", "T. Kipf"], "title": "Object-centric learning with slot attention.", "venue": "Advances in Neural Information Processing Systems", "year": 2020}, {"authors": ["H. Zhan"], "title": "et al", "venue": "ResNeSt: Split-Attention Networks.", "year": 2020}, {"authors": ["P. Welinder", "S. Branson", "T. Mita", "C. Wah", "F. Schroff", "S. Belongie", "P. Perona"], "title": "Caltech-UCSD Birds 200", "venue": "Tech. rep. CNS-TR-2010-001. California Institute of Technology,", "year": 2010}, {"authors": ["S. Bird", "E. Klein", "E. Loper"], "title": "Natural language processing with Python: analyzing text with the natural language toolkit", "venue": "\u201d O\u2019Reilly Media, Inc.\u201d,", "year": 2009}, {"authors": ["F. Pedregosa"], "title": "Scikit-learn: Machine Learning in Python.", "venue": "Journal of Machine Learning Research", "year": 2011}], "sections": [{"text": "R E S C I E N C E C Replication / ML Reproducibility Challenge 2021\n[Re] Reproducibility Study - SCOUTER: Slot"}, {"heading": "Attention-based Classifier for Explainable Image", "text": ""}, {"heading": "Recognition", "text": "Maarten Burger1,2, ID , Kaya ter Burg1,2, ID , Sam Titarsolej1, ID , and Selina Jasmin Khan1, ID 1University of Amsterdam, Amsterdam, the Netherlands \u2013 2Equal contributions\nEdited by Koustuv Sinha,\nSharath Chandra Raparthy\nReviewed by Anonymous Reviewers\nReceived 04 February 2022\nPublished 23 May 2022\nDOI 10.5281/zenodo.6574641\n1 Reproducibility Summary"}, {"heading": "Scope of Reproducibility", "text": "We aim to replicate the main findings of the paper SCOUTER: Slot Attention-based Classifier for Explainable Image Recognition by Li et al. in order to verify the main claims they make: 1) The explanations generated by SCOUTER outperform those by other explana\u2010 tion methods in several explanation evaluation metrics. 2) SCOUTER achieves similar classification accuracy as a fully connected model. 3) SCOUTER achieves higher confu\u2010 sion matrix metrics than a fully connected model on a binary classification problem."}, {"heading": "Methodology", "text": "The authors provided code for training the models. We implemented the explanation evaluation metrics and confusion matrix metrics ourselves. We used the same hyper\u2010 parameters as the original work, in case the hyperparameter was reported. We trained all models from scratch on various datasets and evaluated the explanations generated by these models with all reported metrics. We compared the accuracy scores between different models on several datasets. Finally, we calculated an assortment of confusion matrix metrics on models trained on a binary dataset."}, {"heading": "Results", "text": "We were only able to reproduce 22.2% of the explanation evaluation metrics and could thus not find conclusive support for claim 1. We could only verify claim 2 for one of the datasets and in total could reproduce 55.5% of the original scores. We could reproduce all scores regarding claim 3, but the claim is still not justified, as the scores between the fully connected and SCOUTER models lie very close to one another."}, {"heading": "What was easy", "text": "The paper was well written, so understanding the SCOUTER architecture was straight\u2010 forward. The code for training a model was available and together with the examples\nCopyright \u00a9 2022 M. Burger et al., released under a Creative Commons Attribution 4.0 International license. Correspondence should be addressed to Maarten Burger (maarten.l.burger@gmail.com) The authors have declared that no competing interests exist. Code is available at https://github.com/kayatb/reproduce_SCOUTER. \u2013 SWH swh:1:dir:a294d795e2f9e00a93e9955b70c86a28b1c310d0. Open peer review is available at https://openreview.net/forum?id=HZNlq3fmhRF.\nReScience C 8.2 (#8) \u2013 Burger et al. 2022 1\nthe authors provide, this was achievable with relative ease. A checkpoint system is im\u2010 plemented, so training a model can be split into multiple runs. All used datasets are available and straightforward to obtain."}, {"heading": "What was difficult", "text": "The original code did not contain any documentation, which made it difficult to navi\u2010 gate. No code for calculating the metrics was provided and this had to be implemented from scratch. During the training of the models, memory allocation issues occurred. Training and evaluating on a large dataset took a considerable amount of time.\nCommunication with original authors We sent the authors an e\u2010mail to request either the missing code or more details on how the metrics were implemented, but unfortunately we did not receive a reply.\nReScience C 8.2 (#8) \u2013 Burger et al. 2022 2\n2 Introduction\nExplainable Artificial Intelligence (XAI) is growing in popularity and becomes increas\u2010 ingly important as more and more AI applications are used in daily life. It is important to visualize both positive and negative patterns in the explanation of a model [1], but this discernment has not gained much attention yet. In [2], Li et al. introduce a model architecture that is capable of generating both positive and negative explanations based on an explainable slot attention module.\n3 Scope of reproducibility\nThe authors sought to tackle the problem of deep neural networks being unintelligible. For this purpose they developed SCOUTER (Slot\u2010based COnfigUrable and Transparent classifiER) [2]. The unique aspect of SCOUTER is that every category has its correspond\u2010 ing positive or negative explanation as to why a particular image does or does not belong to a certain category. This offers a more in\u2010depth look into what a model bases its pre\u2010 dictions on and thus increases its explainability. The main claim of the original paper is aptly summarised in the last sentence of its con\u2010 clusion: \u201dExperimental results prove that SCOUTER can give accurate explanationswhile keeping good classification performance\u201d. This is what we will be trying to reproduce. While this claim in itself is vague, the authors compare the score SCOUTER achieves on cer\u2010 tain datasets to other methods such as GradCAM [3], RISE [4], I\u2010GOS [5] and IBA [6] and show that SCOUTER achieves a similar or higher score in most metrics. Furthermore, they also train a model where the slot attention is replaced with a fully connected layer as an (unexplainable) baseline to compare SCOUTER to. This can be dissected into the three following claims that we will attempt to verify by reproducing the experiments of the authors:\n1. SCOUTER will achieve the highest score on the following explanation evaluation metrics: area size, precision, insertion areaunder curve, deletion areaunder curve, infidelity and sensitivity on the ImageNet dataset [7] compared to other explana\u2010 tion methods.\n2. SCOUTERwill achieve similar classification accuracy as the FCmodel trained and validated on the ImageNet, Con\u2010text [8], and CUB\u2010200\u20102011 [9] datasets\n3. SCOUTERwill achieve higher ROC\u2010AUC, Accuracy, Precision, Recall, F1\u2010Score and Cohen\u2019s Kappa scores than the FC model on the ACRIMA dataset [10].\n4 Methodology\nThe original paper provides a link to the Github repository1 with the code and instruc\u2010 tions necessary to train themodels whichwere reported in the paper. However, the code used to evaluate the explanations of the trained models was not included. We therefore had to implement these ourselves. The area size metric was partially implemented in the authors code, where the area size for a single imagewas calculated. We extended this code to calculate the average area size over the entire validation set. We implemented the following explanation evaluation metrics from various papers ourselves: precision [2], Insertion Area Under Curve (IAUC) [4], Deletion Area Under Curve (DAUC) [4], infi\u2010 delity [11] and sensitivity [11]. Interesting to note is that the precision metric is defined by the authors themselves. The papers the authors referenced for IAUC and DAUC2, and\n1https://github.com/wbw520/scouter 2https://github.com/eclique/RISE\nReScience C 8.2 (#8) \u2013 Burger et al. 2022 3\ninfidelity and sensitivity3 provided code for the metrics implementation. We used these and adapted them slightly to integrate it with the code for SCOUTER to deviate as little as possible from the original experiments. Furthermore, there was no code available for working with the ACRIMA dataset, so we implemented this ourselves as well. Using the code of the authors composited with our own code, we conducted our experi\u2010 ments on the GPU nodes of the LISA cluster on SurfSara4 which uses an Nvidia GeForce 1080Ti, 11GB GDDR5X GPU.\n4.1 Model description Typically a classificationmodel consists of the following: feature extractionusing a back\u2010 bone network, which is then mapped onto a score vector representing the confidence for each class. When using fully connected layers to map such a feature onto a score vector it results in a model that is a black\u2010box, which does not give much information about how or why a certain class attains a higher confidence score. Such a fully connected classifier is replaced instead by an explainable xSlot module, which is based on anobject\u2010centric slot attentionmodule [12]. This creates the SCOUTER model as seen in Figure 1 [2]. In order to reproduce the experiments we will train a multitude of such SCOUTERmod\u2010 els. All models use ResNeSt\u201026 [13] as their backbone, since that was also used in the experiments we aim to reproduce. All models use the same SCOUTER loss as defined by the original authors. Since there are no pre\u2010trained models made available we will train all models from scratch. For all models the amount of parameters is just above 15,000,000. The full table for parameter counts can be found in Table 1.\n4.2 Datasets We used various datasets during our experiments. For reproducing the original exper\u2010 iments we used the ImageNet, Con\u2010text, CUB\u2010200\u20102011 and ACRIMA datasets. In line\n3https://github.com/chihkuanyeh/saliency_evaluation 4https://userinfo.surfsara.nl/systems/lisa/description\nReScience C 8.2 (#8) \u2013 Burger et al. 2022 4\nwith the original experiments, we use the train part of the dataset for the training and the validation part for calculating the metrics. ImageNet. The ImageNet Large Scale Visual Recognition Challenge (ILSVRC) dataset5 [7] is widely used for classification models. The categories consist of and are organized according to nouns in theWordNet hierarchy [14]. It contains 1,000 categories, 1,281,167 images for training, 50,000 images for validation and 100,000 images for testing. We pre\u2010 processed the structure of the directories of the validation set to be in line with the author\u2019s code. Con\u2010text. The Con\u2010text dataset6 [8] is focused on the use of fine\u2010grained classification of buildings into their sub\u2010classes such as cafe, tavern, diner, etc. by detecting scene text in images. The dataset consists of 28 categories with 24,255 images in total. Splitting the dataset was done by the authors using a seed, as there is no inherent split. CUB\u2010200\u20102011. The Caltech\u2010UCSD Birds 200\u20102011 (CUB\u2010200\u20102011) dataset7 [9] consists of images with photos of 200 bird species (mostly North American). It consists of 200 cat\u2010 egories with 11,788 images in total. The train set contains 5,994 images and the test set contains 5,794 images. Note that while the original authors cite the CUB\u2010200 dataset [15], everything in the available code points towards the authors using the CUB\u2010200\u20102011 dataset. For example: the code to load the \u201dCUB\u2010200\u201d data is only functional when using the CUB\u2010200\u20102011 dataset. As such, we made the decision to use CUB\u2010200\u20102011 for our experiments. ACRIMA. The ACRIMA dataset8 [10] can be used for automatic glaucoma assessment using fundus images. It contains 2 categories and 705 images. It is composed of 396 glaucomatous images and 309 normal images. There is no inherent split for the data, so we made our own with 80% of the images in the train set and 20% in the validation set using a seed.\n4.3 Hyperparameters Many of the hyper\u2010parameters were set in accordance with the original paper, as these were documented and reported. However, not all hyperparameter settings were doc\u2010 umented. There is a specific lack of the \u201dslots per class\u201d hyperparameter. We tested both the positive and negative SCOUTER model with four different slots per class hy\u2010 perparameter settings, namely: 1, 2, 3, and 5. We tested this with \u03bb values of both 1 and 10. We found there to be no significant difference in performance in classification accuracy or evaluation metrics between the different slots per class values. As such, all the models that we report on were trained with 1 slot per class since this value was set by the authors in the examples they provided with their code. The full hyperparameter settings can found in Table 2.\n5Download link: https://image-net.org/download.php 6Download link: https://staff.fnwi.uva.nl/s.karaoglu/datasetWeb/Dataset.html 7Download link: http://www.vision.caltech.edu/visipedia/CUB-200-2011.html 8Download link: https://figshare.com/s/c2d31f850af14c5b5232\nReScience C 8.2 (#8) \u2013 Burger et al. 2022 5\n4.4 Experimental setup and code Our code is available at: https://github.com/kayatb/reproduce_SCOUTER. We trained the models using the hyperparameter setup as described above. In order to reproduce the original results we trained six different models for the explanation eval\u2010 uation: both SCOUTER+ and SCOUTER\u2212 models with \u03bb values of 1, 3 and 10. Wherever classification accuracy is reported it is the accuracy of themodel on the valida\u2010 tion set after the final epoch, as was done by the original authors. For the evaluation of classification on ImageNet we reused the positive and negative SCOUTER models with a \u03bb value of 10, since this model has the same hyperparameter settings. We trained separate positive and negative SCOUTER models with \u03bb = 10 for the Con\u2010text and CUB\u2010 200\u20102011 classification evaluation. For all datasets we also trained a fully connected classifier model (with ResNeSt\u201026 as backbone) to compare the SCOUTER models to. To reproduce the confusion matrix metrics for ACRIMA we trained a positive and nega\u2010 tive SCOUTER model on that dataset with \u03bb = 10. Results relating to Con\u2010text, CUB\u2010200\u20102011 and ACRIMA were obtained by averaging the scores from three independent runs. Due to restricted GPU hours and time constraints, we only trained a single model for each configuration on ImageNet.\nMetrics \u2014We used several metrics to evaluate the generated explanations. The following metricswere calculated on the ground truth class for SCOUTER+ and on the least similar class for SCOUTER\u2212. The least similar class was determined via Wu\u2010Palmer similarity of the WordNet synsets of the categories as implemented in NLTK [16]. This follows the same formula the original authors used to measure similarity. Area sizemeasures the average size of the generated explanations. This is calculated by summing all the pixel values in the attention map. Precision measures the relative amount of pixels of the attention map that falls within the image\u2019s bounding box. Some images in the ImageNet dataset have multiple bound\u2010 ing boxes. We chose to calculate the precision as the max value of each bounding box in the image. IAUC measures the increase in accuracy under the gradual addition of pixels based on their importance in the explanation. The starting state was the image after applying a Gaussian filter of size 11 and \u03c3 = 5. DAUCmeasures the decrease in accuracy under the gradual removal of pixels based on their importance in the explanation. The final state was an image consisting of only zeroes. Infidelity measures how well the explanation captures the change in the model\u2019s pre\u2010 diction under input perturbations. The image was perturbed by adding noise sampled from a unit Gaussian. This metric was calculated over the first 50 images in the valida\u2010 tion set. Sensitivity measures how much the explanation is affected by input perturbations. We calculated the maximum sensitivity, as was done in [11]. The image was perturbed by adding noise sampled from a uniform distribution ranging from \u20100.2 to 0.2. This metric was calculated over the first 50 images in the validation set. The authors do not give a complete description of how they implemented these metrics. We thus tried to stay as close as possible to the implementations in [4] and [11]. All pa\u2010 rameters were thus chosen in accordance with these implementations. Classification performance was mostly measured via accuracy. The performance of the models on the ACRIMA dataset was evaluated more extensively with several confusion matrix metrics: ROC\u2010AUC, accuracy, precision, recall, F1\u2010score and Cohen\u2019s Kappa as implemented in Scikit\u2010learn [17].\nReScience C 8.2 (#8) \u2013 Burger et al. 2022 6\n4.5 Computational requirements All experiments were conducted on the the GPU nodes of the LISA cluster on SurfSara using a Nvidia GeForce 1080Ti, 11GB GDDR5X. Computation time varied greatly between datasets. Training a model on the ImageNet dataset took up to 12 hours, for CUB\u2010200\u20102011 it took around 2 hours, for Con\u2010text it was 1.5 hours and training on the ACRIMA dataset took less than 5minutes. The calculation of the explanation evaluationmetrics was done on the ImageNet validation set and thus took a long time as well, with IAUC and DAUC taking the longest at 1.5 hours per model.\n5 Results\nWe chose to classify results that fall within\u00b10.05 of the original results as reproducible. Regarding the explanation evaluation metrics, we found that we could not reproduce most results reported in the original paper. The results we acquired do not fully sup\u2010 port claim 1. We were able to obtain similar classification accuracy scores on the Im\u2010 ageNet dataset for all models, but we could not reproduce the scores for SCOUTER+ and SCOUTER\u2212 on the Con\u2010text and CUB\u2010200\u20102011 datasets. Therefore we cannot ver\u2010 ify claim 2 with these results. Finally, we were able to reproduce all scores from the confusion matrix metrics on the ACRIMA dataset. While we were able to reproduce the scores, we cannot completely verify claim 3.\n5.1 Results reproducing original paper\nResult 1: reproducing evaluation metric scores \u2014 The results of our experiments regarding verifying claim 1 can be seen in Table 3. From this we can see that the area size metric is largely reproducible, but the other metrics are not. Precision deviates not too much from the original scores, but IAUC, DAUC, infidelity and sensitivity differ a lot. Com\u2010 pared to the original scores obtained for the other explanationmethods, SCOUTER does not outperform them with our acquired scores. Thus, we were not able to verify claim 1 with our implementation.\nResult 2: Reproducing Classification Accuracy \u2014 The results of our experiments regarding the verification of claim 2 can be seen in Table 4. As we can see, we were able to reproduce all scores for the models trained on ImageNet. We could also recreate the accuracy scores for the FCmodel on the other datasets. However, we did not obtain similar scores for any of the SCOUTER models on Con\u2010text and CUB\u2010200\u20102011. Our trained SCOUTER models perform significantly worse on these datasets compared to what the original paper reported and the scores we obtained for the FC models. Therefore, we did not find full support for claim 2, as we did not find SCOUTER to perform similar to the FC model on Con\u2010text and CUB\u2010200\u20102011.\nReScience C 8.2 (#8) \u2013 Burger et al. 2022 7\nResult 3: reproducing ACRIMA confusion matrix evaluations \u2014 The results of our experiments regarding claim 3 can be seen in Table 5. We were able to reproduce all results reported in the original paper. However, claim 3 states that SCOUTER achieves a higher score than the FCmodel in the reported confusionmatrix metrics. This was not the case with the results we found. There is a very slight difference between the scores of SCOUTER and the FCmodel, where in some cases the FCmodel obtains a marginally higher score than (one of) the SCOUTER models. In the original paper, SCOUTER also only slightly outperformed the FC model. Thus, we have been able to reproduce the reported scores, but these results do not fully support claim 3.\n5.2 Results beyond original paper Since the accuracy scores we found for the SCOUTER models trained on CUB\u2010200\u20102011 and Con\u2010text were so much lower, we wanted to see if training for more epochs would be beneficial. The models did not seem to have converged fully after only 20 epochs. In the examples the authors reported in their code repository, they state 150 epochs for training models on these datasets, so we tested that amount. However, for SCOUTER+ trained on CUB\u2010200\u20102011 this only resulted in an accuracy of 0.6443, which still deviates significantly from the original score of 0.7362.\n6 Discussion\nGiven the results presented above, we did not verify all claims presented in Section 3. Regarding claim 1, we believe this to bemostly due to the fact that we had to implement most of the metrics ourselves. The authors do not report on how they implemented their metrics and what settings they have used. That means it is highly likely that there exist discrepancies between our code and theirs. It could be the case that they have done some additional calculations on the metrics, especially sensitivity, since that met\u2010 ric always lies between 0 and 1 in [2], but our found scores do not. Furthermore, the sensitivity scores reported in [11] of which we have used the code also do not neces\u2010 sarily lie in this range. Since our found scores are not in line with what was originally reported, we cannot verify if SCOUTER outperforms other explanation methods. The fact that we were not able to obtain similar classification scores for both SCOUTER models on Con\u2010text and CUB\u2010200\u20102011 could be due to the fact that the authors used different hyperparameters than we did. Not all hyperparameters were reported, so in some cases we had to make decisions ourselves. Unfortunately, we did not have the time to run an extensive hyperparameter search. We could thus not verify claim 2.\nReScience C 8.2 (#8) \u2013 Burger et al. 2022 8\nWhile we did find similar scores for the confusionmatrix metrics on ACRIMA, we could not find support for what claim 3 states: SCOUTER outperforms the FC model on this dataset. The scores we found are very similar between the models, but we would argue that this was the case in the original paper as well. The scores may not fully support the claim that is being made. Finally, our approach has some shortcomings that is mostly due to time constraints. We did not do three separate runs for training models on ImageNet and thus our findings are based on a single run, which is not ideal. The results on the ImageNet dataset should therefore not be interpreted as final. Furthermore, we were not able to experiment with different backbones and only used ResNeSt\u201026, which was the main backbone that was used in the original paper.\n6.1 What was easy The original paper was well written, making it manageable to understand the SCOUTER model. Moreover, the code for training the models was available. As such, training the models was done with relative ease. A checkpoint system for the models was imple\u2010 mented, meaning training could be stopped and resumed later. The datasets the origi\u2010 nal authors used are publicly available and straightforward to find and download.\n6.2 What was difficult The code of the original authors was devoid of documentation, making it difficult to navigate and pinpoint which part performed what operation. Due to this, we spent a lot of time on any implementation we had to create or extent. Furthermore, the generation of attention maps, arguably one of the most important parts, was hidden somewhere in the code and not documented. While the code for training the models was accessible, there was no code available for the evaluation metrics. During training, we would encounter a memory allocation er\u2010 ror every 8 to 13 epochs, meaning we had to resume from checkpoints. The ImageNet dataset is very large and thus took a lot of time to train. Lastly, there was no code pro\u2010 vided for working with the ACRIMA dataset. We had to implement loading the dataset and evaluating the performance ourselves.\n6.3 Communication with original authors We sent an e\u2010mail to the authors enquiring about the missing code. However, we did not receive a reply."}], "title": "[Re] Reproducibility Study - SCOUTER: Slot Attention-based Classifier for Explainable Image Recognition", "year": 2022}