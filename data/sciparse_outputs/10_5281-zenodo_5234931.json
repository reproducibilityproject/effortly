{"abstractText": "DOI 10.5281/zenodo.5234931 AbstractThis article reports on a full replication study in computational fluid dynamics, using an immersed boundary method to obtain the flow around a pitching and rolling elliptical wing. As in the original study, the computational experiments investigate the wake topology and aerodynamic forces, looking at the effect of: Reynolds number (100\u2013400), Strouhal number (0.4\u20131.2), aspect ratio, and rolling/pitching phase difference. We also include a gridindependence study (from 5 to 72million grid cells). The trends in aerodynamic performance and the characteristics of the wake topology were replicated, despite some differences in results. We declare the replication successful, and make fully available all the digital artifacts and workflow definitions, including software build recipes and container images, as well as secondary data and post-processing code. Run times for each computational experiment on the nominal grid were between 8.1 and 13.8 hours to complete 5 flapping cycles, using two compute nodes with Dual 20-Core 3.70GHz Intel Xeon Gold 6148 CPUs and two NVIDIA V100 GPU devices each.", "authors": [{"affiliations": [], "name": "Olivier Mesnard"}, {"affiliations": [], "name": "Lorena A. Barba"}, {"affiliations": [], "name": "Konrad Hinsen"}, {"affiliations": [], "name": "Chengyu Li"}, {"affiliations": [], "name": "Olivier Pantal\u00e9"}], "id": "SP:710731bf42fd55ac0e28dcb5e2cf5e63296616eb", "references": [{"authors": ["R.D. Peng"], "title": "Reproducible research in computational science.", "venue": "In: Science", "year": 2011}, {"authors": ["A. Krishnan", "J.J. Socha", "P.P. Vlachos", "L. Barba"], "title": "Lift and wakes of flying snakes.", "venue": "Physics of Fluids", "year": 2014}, {"authors": ["O. Mesnard", "L.A. Barba"], "title": "Reproducible and replicable computational fluid dynamics: it\u2019s harder than you think.", "venue": "Computing in Science & Engineering", "year": 2017}, {"authors": ["C. Li", "H. Dong"], "title": "Three-dimensional wake topology and propulsive performance of low-aspect-ratio pitchingrolling plates.", "venue": "Physics of Fluids", "year": 2016}, {"authors": ["J.B. Perot"], "title": "An analysis of the fractional step method.", "venue": "Journal of Computational Physics", "year": 1993}, {"authors": ["R. Mittal", "H. Dong", "M. Bozkurttas", "F. Najjar", "A. Vargas", "A. Von Loebbecke"], "title": "A versatile sharp interface immersed boundary method for incompressible flows with complex boundaries.", "venue": "Journal of computational physics", "year": 2008}, {"authors": ["K. Taira", "T. Colonius"], "title": "The immersed boundary method: a projection approach.", "venue": "Journal of Computational Physics", "year": 2007}, {"authors": ["R.-Y. Li", "C.-M. Xie", "W.-X. Huang", "C.-X. Xu"], "title": "An efficient immersed boundary projection method for flow over complex/moving boundaries.", "venue": "Computers & Fluids", "year": 2016}, {"authors": ["P.-Y. Chuang", "O. Mesnard", "A. Krishnan", "L.A. Barba"], "title": "PetIBM: toolbox and applications of the immersedboundary method on distributed-memory architectures.", "venue": "The Journal of Open Source Software", "year": 2018}, {"authors": ["O. Mesnard", "P.-Y. Chuang", "A. Krishnan", "L.A. Barba"], "title": "PetIBM - toolbox and applications of the immersedboundary method on distributed-memory architectures (v0.5.1)", "venue": "Version", "year": 2020}, {"authors": ["O. Mesnard", "L.A. Barba"], "title": "Re] Three-dimensional wake topology and propulsive performance of lowaspect-ratio pitching-rolling plates (code application). Version 2021.05.02", "venue": "DOI: 10.5281/zenodo", "year": 2021}, {"authors": ["O. Mesnard", "L.A. Barba"], "title": "Re] Three-dimensional wake topology and propulsive performance of lowaspect-ratio pitching-rolling plates (repro-packs)", "venue": "DOI: 10.5281/zenodo.4732946", "year": 2021}, {"authors": ["D. Merkel"], "title": "Docker: lightweight linux containers for consistent development and deployment.", "venue": "Linux journal 2014.239", "year": 2014}, {"authors": ["G.M. Kurtzer", "V. Sochat", "M.W. Bauer"], "title": "Singularity: Scientific containers for mobility of compute.", "year": 2017}, {"authors": ["O. Mesnard", "L.A. Barba"], "title": "Reproducible Workflow on a Public Cloud for Computational Fluid Dynamics.", "venue": "Computing in Science Engineering", "year": 2020}, {"authors": ["D.L. Donoho", "A. Maleki", "I.U. Rahman", "M. Shahram", "V. Stodden"], "title": "Reproducible research in computational harmonic analysis.", "venue": "Computing in Science & Engineering", "year": 2008}, {"authors": ["O. Mesnard", "L.A. Barba"], "title": "Re] Three-dimensional wake topology and propulsive performance of lowaspect-ratio pitching-rolling plates (container images)", "venue": "July 2021. DOI: 10.5281/zenodo.5090342. ReScience C", "year": 2021}], "sections": [{"text": "R E S C I E N C E C"}, {"heading": "Replication / Computational Fluid Dynamics", "text": "[Re] Three-dimensional wake topology and propulsive performance of low-aspect-ratio pitching-rolling plates\nOlivier Mesnard1, ID and Lorena A. Barba1, ID 1Department of Mechanical and Aerospace Engineering, The George Washington University, Washington, DC, USA\nEdited by Konrad Hinsen ID\nReviewed by Chengyu Li ID\nOlivier Pantal\u00e9 ID\nReceived 02 May 2021\nPublished 23 August 2021\nDOI 10.5281/zenodo.5234931\nAbstractThis article reports on a full replication study in computational fluid dynamics, using an immersed boundary method to obtain the flow around a pitching and rolling elliptical wing. As in the original study, the computational experiments investigate the wake topology and aerodynamic forces, looking at the effect of: Reynolds number (100\u2013400), Strouhal number (0.4\u20131.2), aspect ratio, and rolling/pitching phase difference. We also include a gridindependence study (from 5 to 72million grid cells). The trends in aerodynamic performance and the characteristics of the wake topology were replicated, despite some differences in results. We declare the replication successful, and make fully available all the digital artifacts and workflow definitions, including software build recipes and container images, as well as secondary data and post-processing code. Run times for each computational experiment on the nominal grid were between 8.1 and 13.8 hours to complete 5 flapping cycles, using two compute nodes with Dual 20-Core 3.70GHz Intel Xeon Gold 6148 CPUs and two NVIDIA V100 GPU devices each.\n1 Introduction\nReproducibility and replicability are essential for the progress of science. In 2017, the US Congress directed the National Science Foundation to contract with the National Academies of Sciences, Engineering, and Medicine (NASEM) to assess reproducibility and replicability in scientific and engineering research. NASEM published a consensus report1 in May 2019, containing findings and recommendations to improve rigor and transparency in research. The report also provides clear definitions of \u201creproducibility\u201d and \u201creplicability\u201d, intended to apply across all fields of science:\nReproducibility is obtaining consistent results using the same input data; computational steps, methods, and code; and conditions of analysis.\nReplicability is obtaining consistent results across studies aimed at answering the same scientific question, each of which had obtained its own data. Two studies may be considered to have replicated if they obtain consistent results given the level of uncertainty inherent in the system under study.\nThe minimum requirement for computational research to be reproducible is to make code and data available to others. Peng2 introduced the concept of a reproducibility spectrum, inwhich reproducible research is a \u201cminimum standard for judging scientific claimswhen full independent replication of a study is not possible\u201d or not available. The two extremes on the reproducibility spectrum are \u201cnot reproducible\u201d (when a published manuscript is the sole deliverable from a study) and \u201cfully replicated\u201d (the gold standard for a study). This paper addresses reproducibility and replicability in computational fluid dynamics, a mature field and one of the oldest branches of computational science. At the center\nCopyright \u00a9 2021 O. Mesnard and L.A. Barba, released under a Creative Commons Attribution 4.0 International license. Correspondence should be addressed to Lorena A. Barba (labarba@gwu.edu) The authors have declared that no competing interests exist. Code is available at https://github.com/barbagroup/petibm-rollingpitching. \u2013 SWH swh:1:dir:087f13c9f78908967077071108092f245d1f707b. Open peer review is available at https://github.com/ReScience/submissions/issues/55.\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 1\nof this field are the Navier-Stokes equations, which are notoriously difficult to solve numerically, with computational experiments often taking a long time, even on parallel compute clusters. Both this difficulty and the history of the field (with early progress done in secret defense laboratories) contribute to rather poor standards of reproducibility. Research results are regularly communicated via published articles without accompanying software or data. In the past, we have undertaken a replication of results from our own research group on unsteady fluid dynamics3 and published the outputs and lessons learned from this exercise.4 Weaimhere to assess the effort needed to replicate the computational results from another research group and set our sights on a computational fluid dynamics study from Li and Dong5 that investigated the dynamics of pitching and rolling wings. While many prior studies have focused on the pitching and/or heaving motion of three-dimensional wings, only few studies have looked at the combined rolling and pitching motion. As explained by Li and Dong5, the pitching-rolling kinematics has the potential to serve as a better canonical model for the hydrodynamics of bio-inspired flapping propulsors. The authors carried out a parametric study, using their own research code, to quantify the effects of the Reynolds number, Strouhal number, aspect ratio, and rolling/pitching phase difference on the wake topology and the propulsive performance of flapping wings. Table 1 lists the parameters and values considered in the original study. The deliverable from this study was the journal publication itself; the computational code, input data, and conditions of analysis used to produce the numerical results were not made available. Thus, referring back to Peng s\u0313 reproducibility spectrum, we consider the study to be not reproducible. Our objective was to replicate the scientific findings claimed in the original study and to do it in a reproducibleway. Wehave re-implemented the three-dimensional rolling and pitching kinematics in an open-source code shared on GitHub* and prepared extensive reproducibility packages for all results.\n2 Numerical methods and problem setup\nThe original studymodeled the wing kinematics with an elliptical disk that undergoes a rolling motion around the streamwise x-axis and a pitchingmotion around its spanwise axis. The wing is characterized by the chord length c and the spanwise length S. The aspect ratio of the wing is given by AR = S2/Aplan, where Aplan is the planform area of the plate (Aplan = \u03c0cS/4). The rolling motion is defined by the instantaneous rolling position:\n\u03d5(t) = \u2212A\u03d5 cos (2\u03c0ft) (1) where t is the time, f is the flapping frequency, and A\u03d5 is the rolling amplitude. The pitching motion along the spanwise axis is governed by the instantaneous pitching position:\n*PetIBM-rollingpitching: github.com/barbagroup/petibm-rollingpitching\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 2\n\u03b8(t) = \u2212A\u03b8 cos(2\u03c0ft+ \u03c8) (2)\nwhere A\u03b8 is the pitching amplitude and \u03c8 is the phase-difference angle between the pitching and rolling motions. For the present replication study, we use the same wing kinematics and numerically solve the three-dimensional Navier-Stokes equations (velocity/pressure formulation) for an incompressible viscous flow. The Reynolds number is defined as Re = U\u221ec\u03bd , where U\u221e is the incoming freestream speed and \u03bd is the kinematic viscosity. The convective and diffusion terms of the partial differential equations are time-integrated using second-order accurate Adams-Bashforth and Crank-Nicolsonmethods, respectively. We enforce a Dirichlet condition (streamwise velocity set to the freestream speed U\u221e) on all boundaries, except at the outlet where we use a convective boundary condition (to carry vortical structures outside the computational domain). Our code base, PetIBM, solves the incompressible Navier-Stokes equations using a projectionmethod, seen as an approximate block-LU decomposition of the fully discretized equations.6 To compute the flow around a moving object (e.g., a pitching-rolling wing), we use an immersed boundary technique. The fluid equations are solved over an extended domain that includes the interior of the immersed object. The boundary of the object is represented by a collection of Lagrangianmarkers thatmoveswith a prescribed rigid kinematics and on which we enforce a no-slip condition. The presence of the body in the domain is taken into account bymodifying the fluid equations in the vicinity of its boundary. This approach enables us to solve the equations on a simple fixed structured Cartesian grid. Different near-boundary treatments lead to different immersed boundarymethods. The original study used a sharp-interface method with a ghost-cell methodology.7 PetIBM employs regularized delta functions to transfer data between the Lagrangian markers and the Eulerian grid points (on which the fluid equations are solved). Our code base includes several implementations of the immersed-boundary projection method;8 we use the formulation of Li et al.9 for all computations of the present study. Thesemethods fall into the category of diffuse-interface methods, as the discrete delta function smears the solution over a few grid cells around the boundary. Each time step, we successively solve three linear systems for an intermediate velocity field, the Lagrangian forces, and the pressure field. The system for the velocity is solved using a stabilized bi-conjugate gradient method (from the PETSc library) with a Jacobi preconditioner and a convergence criterion based on the absolute L2-norm of the residual set to atol = 10\u22126. We solve the system for the Lagrangian forces with a direct solver (SuperLU_dist library). The pressure Poisson system is solved with a conjugate-gradient method using a classical algebraic multigrid technique (via the NVIDIA AmgX library); here, too, convergence is reached when the absolute L2-norm of the residual is 10\u22126. To quantify aerodynamic performance of the wing, we report the thrust, lift, and spanwise force coefficients, defined as\nCT,L,Z = (T, L, Z)\n1 2\u03c1U 2 \u221eAplan\n, (3)\nwhere T , L, and Z are the thrust, lift, and spanwise forces, obtained by integrating the x, y, and z components of the Lagrangian forces along the surface of the immersed boundary. The forces are a primary output variable of PetIBM. Following the original study, we also define the propulsive efficiency of the wing:\n\u03b7 = TU\u221e\nP , (4)\nwhereP is thehydrodynamicpower, and the overline symbol represents a cycle-averaged quantity. (In line with the original study, we only consider the positive power to compute the average.)\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 3\nWhile Li and Dong5 do not report how they computed the hydrodynamic power, we feel the need to elaborate on it in the context of a diffuse-interface immersed boundary. Ideally, the surface pressure distribution would be obtained via trilinear interpolation from grid points onto body markers. However, the regularized delta kernel smears the solution near the body. It means that the solution within the support of the kernel may contain spurious artifacts. To avoid this problem, the surface pressure is redefined as the fluid pressure interpolated along the wing normal on each side of the flat surface at a distance where all interpolating points lie outside the support of the delta kernel. In other words, the hydrodynamic power is defined as the integral over an expanded surface of the inner product between the interpolated fluid pressure and the body velocity. Since the delta kernel used in the present study has a support of 3 cell widths (in each Cartesian direction), we chose to interpolate the pressure at 3%of the chord length along the wing normal. For our baseline simulation (AR = 1.27, Re = 200, St = 0.6, and \u03c8 = 90o) and nominal grid (with smallest cell width \u2206x = 0.01c), interpolating at 3% returned a value of \u03b7 = 0.1635 for the propulsive efficiency. Interpolating closer (at 2%) and further (4%) to the surface did not significantly change the result: \u03b7 = 0.1613 at 2% and 0.1664 at 4%, both within a relative difference of 1.8%.\n3 Reproducible computational workflow\nThe final product of the original study is a published manuscript in the journal Physics of Fluids. Although the manuscript is well detailed, the code and input data used to produce the computational results were not made publicly available by the authors. In that regard, we consider the study to not be reproducible. Thus, we aim to replicate the scientific findings claimed in the original study with our own research software stack and deliver reproducible results. PetIBM is developed in the open under the permissive (non-copyleft) 3-Clause BSD license, version-controlled with Git, and hosted on a public GitHub repository.* The software has also been submitted, reviewed, and published in the Journal of Open Source Software (Chuang et al.10), where reviewers have installed the code, ran tests, and submitted feedback to improve it. Furthermore, each significant release of the software is archived on the data repository Zenodo (e.g., version 0.5.111). Our implementation of the three-dimensional rolling and pitching wing, which relies on PetIBM, is also open source and available on GitHub\u2020 under the same license. The repository contains all input data and processing scripts that were used to produce the computational results reported in the next section. This allows anyone to inspect the code, to verify the steps that were taken to produce computational results, and to modify and re-use it for other applications. The repository also includes README files to guide readers that may be interested in re-running the analysis. Upon submission of the present manuscript, the application repository has been archived on Zenodo,12 as well as the data needed to reproduce the figures.13 We leveraged our University high-performance-computing (HPC) cluster, called Pegasus, to run all simulations reported here. (We used computational nodes with Dual 20-Core 3.70GHz Intel Xeon Gold 6148 processors and NVIDIA V100 GPU devices. More details about the hardware configuration and run times can be found in the README of GitHub repository.) To reduce the burden of building PetIBM and its applications on the cluster, we used the container technology from Docker14 and Singularity.15 Containers allow us to capture the conditions of analysis in a formatted image that can be shared with others. We have already used Docker containers in the past to create a reproducible workflow for scientific applications on the public cloud provider Microsoft Azure.16 Here, we aim to adopt a similar workflow on our local HPC cluster. Early in\n*PetIBM: github.com/barbagroup/petibm \u2020PetIBM-rollingpitching: github.com/barbagroup/petibm-rollingpitching\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 4\nthis replication study, we hit a snag: Docker is not available to users on Pegasus. Indeed, Docker is not available at most HPC centers for security reasons. Submitting containerbased jobs with Docker implies running a Docker daemon (a background process) that requires root privileges that users do not and should not have on shared production clusters. Thus, we decided to leverage the Singularity container technology to conduct the replication study onPegasus. Singularity ismore recent thanDocker, was designed from the ground up to prevent escalation of user privileges, and is compatible with Docker images. Our reproducible workflow starts with creating a Docker image that installs PetIBM and its applications, as well as all their dependencies. We then push the image to a public registry on DockerHub.* Anyone interested in using the application code can now pull the image from the registry and spin up aDocker container to get a faithfully reproduced computational environment. Next, we use the cloud service Singularity Hub to build a Singularity image\u2020 out of the Docker image. We finally pull the Singularity image on the cluster where we run container-based jobs.\n4 Results\nFollowing the original study, we set out to replicate the investigation of the wake topology and aerodynamic performance of low-aspect-ratio wings undergoing a pitchingrolling motion. We conducted the same parametric study to quantify the effect of the Reynolds number, Strouhal number, wing s\u0313 aspect ratio, and phase-difference angle (between the rolling and pitching motions). These parameters govern the near-body and wake topology of the flow, and thus impact the performance of the modeled wing. We initiated this replication exercise with the hope to confirm the general trends of the original results, while using a different immersed-boundary solver and modeling the wing with a flat plate (instead of disk with non-zero thickness). In this section, we first present a grid-independence study, which allows us to freeze some simulation parameters (such as the grid size or the time-step size) for the remainder of the parametric study. As in the original investigation, we report the results of the baseline case (for a circular plate) and assess the effect of the flow parameters. We then present the results from the baseline case (for a circular wing) and look at the effect of the viscosity, geometry, and kinematics on the wake topology and aerodynamic performances of the wing.\n4.1 Grid-independence study In the original study, the authors reported the results of a grid-independence study to justify the spatial and temporal grid resolutions used for the parametric study. They compared force coefficients, profiles of the velocity components, profiles of the fluctuating kinetic energy, and distances between vortical structures in the near wake, obtained with different grid resolutions. Here, we also report the results of our grid-independence study before moving on to the results of the parametric study. We use the same domain size as in the original study: 30c \u00d7 25c \u00d7 25c (where c is the chord length of the wing). The root of the wing (around which the plate undergoes the rolling/pitching motion) is located at the center of the computational domain. We keep the spatial grid uniform (with highest resolution) in the sub-area of the domain that covers the motion of the wing. Outside this area, we also add an extra uniform layer with grid-spacing size \u2206x = 0.05c, in the sub-domain [\u22122c, 6c] \u00d7 [\u22123c, 3c] \u00d7 [\u22121c, 2c], which covers the near-wake region. (We opted for a smooth transition between the two uniform regions, in which the grid-cell widths are stretched with a constant ratio of 1.1 in all directions, except in the streamwise direction behind the wing where we used a\n*DockerHub registry: hub.docker.com/repository/docker/mesnardo/petibm-rollingpitching \u2020Singularity Hub registry: singularity-hub.org/collections/2855\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 5\nratio of 1.03.) Finally, the grid-cell width is stretched to the external boundaries with a constant ratio of 1.2. Figure 1 shows a view of the nominal grid used for the simulations of a circular wing (AR = 1.27). To the readers interested in further inspecting the geometric characteristics of the grids used in the present study: we used Python scripts to codify the grid parameters and saved them into PetIBM-readable yaml files (available on the GitHub repository).\nIn the present study, we model the wing with a flat elliptical surface, discretized with Lagrangian markers uniformly distributed on its surface (with a similar resolution as the grid-spacing size of the background Eulerian grid). As in the original study, we consider the case of a circular wing (AR = 1.27) with Reynolds number Re = 200, Strouhal number St = 0.6, and phase-difference angle \u03c8 = 90o, to assess independence in the numerical results. We investigated the effect of the grid-spacing size, the time-step size, and the convergence criterion of the iterative solvers, on the numerical solution. To assess the effect of the grid-spacing size\u2206x in the vicinity of the wing on the solution, we computed five flapping cycles on three grids: coarse (\u2206x = 0.03c), nominal (\u2206x = 0.01c) and fine (\u2206x = 0.005c). Table 2 reports characteristics of the spatial grids used for the independence study. Note that the \u201cnominal\u201d grid in the original study contains \u223c 6.2\u00d7 106 cells with smallest grid spacing\u2206x = 0.03c near the wing. This is significantly coarser than our nominal grid, which contains \u223c 21.1 \u00d7 106 cells with \u2206x = 0.01c in the vicinity of the wing. As seen in Figure 2, the computed aerodynamic forces on our coarse mesh (similar resolution as their nominal grid) contains spurious artifacts. Spurious force oscillations exist in almost all immersed-boundary methods, although their magnitudes depend on the approach used. We reduced the noise by increasing\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 6\nthe grid resolution near the wing.\nFigure 2 shows the history of the thrust, lift, and spanwise coefficients over two flapping cycles (2000 time steps per cycle), obtained on the coarse, nominal, and fine spatial grids. When using a similar grid resolution as in the original study (\u2206x = 0.03c), the instantaneous force components are noisy and we do not clearly distinguish two peaks in the lift force each half cycle. (Authors of the original study reported two peaks in both the thrust and lift forces, every half cycle.) Spurious noise can be reduced by refining the spatial grid. The history of the forces is visually similar for the nominal and fine grids, with the presence of two peaks in the thrust and lift. Table 3 reports hydrodynamic quantities and propulsive efficiency obtained from the simulations computed during the independence study. Refining the computational grid leads to a relative difference of 7.9%in themean thrust coefficient, 1.2%in the r.m.s. value for the lift coefficient, and 3% in the r.m.s. value of spanwise coefficients. Compared to Li and Dong5, we obtain lower magnitude in the peaks of the force coefficients. Note that we used the nominal\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 7\nspatial grid (\u2206x = 0.01c) for the replication of the parametric study.\nThe original study modeled the wing with an elliptical disk of thickness equal to 3% of the chord length. Since the immersed boundary method used for the present replication allows us to model thin volumes with flat surfaces, we compared the aerodynamic forces obtained on a disk to those on a flat plate. The history of the thrust coefficient (Figure 3) is similar whether we use a disk or a flat plate. We note slightly larger magnitude in the first peak of the lift and in the peaks of the spanwise force when using a disk. Overall, the disk-based simulation does not really improve the solution and we decided to model the wing with a flat plate for the parametric study. Also, fewer Lagrangian markers are needed to discretized a flat-plate wing, making simulations computationally cheaper. (Runtime for the flat-wing simulation was about 8.4 hours to compute 5 flapping cycles on 2 nodes of our Pegasus cluster; with a disk, the runtime was approximately 10.8 hours.)\nAlthough the authors of the original study reported results to assess independence in the results when refining the temporal grid, they did not mention howmany time steps per flapping cycle were computed. (We know that force statistics and profiles of the velocity components did not significantly change when the time-step size was halved.) Figure 4 shows the history of the force coefficients obtained on two temporal grids (2000 and 1000 time steps per flapping cycle), using the nominal spatial grid. The force signals are visually identical when doubling the time-step size, and the maximum relative difference in the aerodynamic quantities is less than 1%. For all simulations of the parametric study, we computed 2000 time steps per flapping cycle. Finally, we also checked that aerodynamic statistics do not change significantly when setting a tighter convergence criterion (atol) for the iterative solvers (based on the absolute size of the residual in the L2-norm). Mean thrust coefficient, root-mean-square values of the lift and spanwise coefficients, and propulsive efficiency remain identical\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 8\nwhen reducing the convergence criterion of the iterative solvers by 3 orders of magnitude (reported in Table 3).\nWe also assess the effect of the grid-spacing and time-step sizes on the flow dynamics by comparing the profiles of the mean velocity components and of the fluctuating kinetic energy at several locations in the wake of the wing. Figures 5a and 5b show the mean streamwise (u1 \u2212 u\u221e) and transverse (u2) velocity profiles in the x/y plane at mid-span (z = S/2). Figure 5c shows the mean spanwise (u3) velocity profiles at the center (y = 0) of the x/z plane. Profiles of the fluctuating kinetic energy ((u\u20321 2 + u\u20322 2 + u\u20323\n2)/2) at mid-span are reported in Figure 5d. We also report digitized data from Li and Dong5 for comparison. Although there exist some differences with the results of the original study, we note that the profiles of the present study are visually similar when refining the spatial grid and when using fewer time steps per flapping cycle. Following the work of Li and Dong5, we also tried to assess the effects of different grids on the instantaneous vortical structures. As in the original study, we quantified the size of the vortex loops at time t/T = 4.25 in the near (x/c = 0.3) and far (x/c = 1.3) wake. Figure 6 shows slices of the streamwise vorticity field in the near and far wake, where\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 9\nwe also report distances between between each pair of vortices. (Center of each vortex is chosen as the point with the maximum absolute value of the streamwise vorticity.) Table 4 reports the distances between vortex centers. Compared to nominal grid, the maximum relative difference occurs for the distance d2 (near wake) on the finer spatial grid and is about 9%. The relatively high difference could be caused by the diffuseinterface immersed boundarymethod used in the present replication study. We employ regularized delta kernels, to transfer information between the Eulerian grid and the Lagrangian surface mesh, which have a compact support that is proportional to the Eulerian grid-spacing size \u2206x. These kernels smear the solution near the immersed boundary. In other words, the solution is not physical over a thin shell around the wing. As we refine the spatial grid (and the Lagrangian mesh), the distance over which the solution is smeared is reduced. Nevertheless, results of the parametric study show that we were able to replicate the main scientific findings of the original study using our nominal grid (with resolution \u2206x = 0.01c near the immersed boundary), computing 2000 time steps per flapping cycles of a wing (modeled as a flat plate).\n4.2 Baseline case As in the original study, we start by looking at thewake topology and aerodynamic forces produced by a rolling and pitching circular plate (AR = 1.27) at Reynolds numberRe =\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 10\n200, with Strouhal number St = 0.6 and phase-difference angle \u03c8 = 90o.\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 11\nWewere able to observe the same flow features as the ones reported in the original study for the baseline case. Figure 7 shows the vortex shedding dynamics in the vicinity of the wing at nine different time values. We visualize vortices using the Q-criterion at Q = 1 (in gray) and Q = 6 (colored by the streamwise vorticity). As the wing rolls downward (Figures 7a to 7c), we observe the formation of a \u201cC\u201d-shaped vortex loop between the root vortex (V1), the tip vortex (V2), and the trailing-edge vortex (TEV). The rolling motion induces a strength asymmetry between V1 and V2. As the plate starts rolling upward while pitching up (Figures 7d to 7f), we note the formation of new vortices from the trailing edge (V3) and from the leading-edge vortex (V4). These vortices interact with each other to form an additional \u201cC\u201d-shaped vortex loop in opposite direction. As the two vortex loops propagates downstream, they form a \u201cdouble-C\u201d-shaped vortex structure, which was reported in the original study. Each flapping cycle produces a pair of \u201cdouble-C\u201dshaped vortex structures (with opposite direction), leading to a bifurcated wake pattern (Figures 8a and 8b). The \u201cdouble-C\u201d-shaped vortex structures evolve into single-loop vortex when convected downstream. As noted in the original study, vortex rings shed in the wake gradually increase in size as they move further downstream, with a slight deflection in the spanwise z-direction towards the tip of the wing (Figure 8c). Also observable on Figure 8b are the set of \u201ccontrails\u201d connecting adjacent rings.\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 12\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 13\nFigure 9 shows two-dimensional slices of the streamwise vorticity component, in the y/z plane at various locations along the x-axis, at the middle of the upstroke (t/T = 4.25)\nFigure 10 shows thehistory of the thrust, lift, and spanwise coefficients over twoflapping cycles. Table 5 reports statistics about the force coefficients, with comparison to the values reported in the original study. Although peak values for all force components and mean thrust coefficient are smaller than the values reported in Li andDong5, we observe similar features in the force signals. Mean lift and spanwise forces are approximately zero. Peak magnitudes in the lift and spanwise forces are in similar range to the peak thrust. Each half cycle, we observe two peaks in the thrust and lift forces, when the plate is near the center of its trajectory, with a smaller value for the first peak. There is also a small production of drag when the plate starts to reverse its rolling direction (e.g., at t/T = 3.5 when the wing starts rolling downwards).\n4.3 Effect of the Strouhal number Next, we look at the effect of the Strouhal number on the wake topology and aerodynamic performance. We computed the three-dimensional flow around a circular flat plate (AR = 1.27) at Reynolds number 200 with a fixed phase-difference angle \u03c8 = 90o, while varying the Strouhal number St. Figure 11 shows lateral and top views of the shedding vortex pattern, at t/T = 4.25, obtained at Strouhal numbers St = 0.4 and 0.8. (Figure 8 shows the wake topology for St = 0.6 at the same time instant.) As reported in the original study, we note a decrease in the vorticity strength for the lower Strouhal number (St = 0.4), and a rapid evolution of the \u201cdouble-C\u201d-shaped vortex structures into single vortex rings. At higher Strouhal number (St = 0.8), we observe more interaction between adjacent vortex rings. Li and Dong5 reported values of the oblique angle (\u03b1), defined as the angle between the horizontal x-axis and the line passing through the first two shed vortex rings adjacent to the trailing-edge of the plate. They also evaluated the inclination angle (\u03b2) of a near vortex ring with respect to the wake centerline. Table 6 reports the oblique and inclination angles obtained with our simulations. Our angles are different from the values reported in the original study. The authors observed a monotonic increase in the oblique angle with respect to the Strouhal number and a peak in the inclination angle at Strouhal\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 14\nnumber St = 1.0 (followed by a sudden decrease). Here, we observe an increase in the oblique angle but until St = 1.0, and the inclination angle peaks at St = 0.8. Matching the observations reported in the original study, we also note the wake deflection along the mid-span axis (Figures 8c, 11b and 11d). The main difference is that the authors\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 15\nreported that for the higher Strouhal number case, the wake starts deflecting towards the tip of the wing and then gradually deflects back in the far wake. We do not observe the back deflection in our simulation at Strouhal number St = 0.8 (Figure 11d), probably because we only computed five flapping cycles, while it looks like the simulation reported in the original study was computed for a longer time (additional vortex rings are present in the wake).\nFigure 12 shows the mean thrust coefficient and propulsive efficiency for a range of Strouhal numbers. The thrust coefficient monotonically increases with the Strouhal number. We note a rapid increase in the propulsive efficiency, with a peak for St = 0.8, followed by a slow decrease. The original study reported a maximum propulsive efficiency for St = 0.6, however their curve-fitting line shows that the optimal Strouhal lies between 0.6 and 0.8. Here, we only report the values at the Strouhal numbers run as we do not knowwhat interpolation procedure was done in the original study to generate the fitted line.\n4.4 Effect of the Reynolds number We also computed the three-dimensional flow at additional Reynolds numbers 100 and 400 for a circular flat plate (AR = 1.27) with Strouhal number St = 0.6 and a 90-degree phase difference between the rolling and pitching motions. Figure 13 shows a perspective view of the near-wake topology at t/T = 4.25 at Reynolds numbers 100 and 400. (Figure 7f shows the same view for Re = 200.) For all Reynolds numbers investigated, we note the formation of a double-loop vortex around the trailing edge of the plate. At lower Reynolds number (Re = 200), vortical structures dissipate more rapidly (due to increased viscous effects). At the higher Reynolds number (Re = 400), \u201cdouble-C\u201d-shaped vortex rings are convected downstream. As expected, vortex structures dissipate more rapidly for low Reynolds numbers. At Reynolds numberRe = 400, \u201cdouble-C\u201d-shaped vortex rings propagate downstream. Overall, we observe similar features as those published in Li and Dong5 and confirm that the flow dynamics of the low-aspect-ratio flapping wing is insensitive to the Reynolds number, at least, for the range investigated here. Figure 14 displays the history of the force coefficients over two flapping cycles for Re = 100, 200, and 400. Table 7 reports themean andpeak thrust coefficients comparing to the data published in Li and Dong5. Although we obtained different statistics in the force coefficients (mean and peak values), we report similar trends as in the original study. First, the absolute peak value andmean value for the thrust coefficient increasewith the\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 16\nReynolds number. Second, the lift force peaks twice every half cycle, for all Reynolds numbers. Third, the negative peak in the spanwise force decreases with the Reynolds number. Finally, the mean lift and spanwise coefficients remain approximately zero for all cases.\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 17\n4.5 Effect of the wing aspect ratio The baseline case investigated the flow dynamics produced by a circular wing (AR = 1.27). Following the original study, we ran two additional simulations, forAR = 1.91 and 2.55, to look at the effect of the wing aspect ratio on the wake topology and aerodynamic forces. (Other parameters remained identical to the baseline case.)\nFigure 15 shows snapshots of the vortical structures at t/T = 4.25 generated by elliptical plates with aspect ratios AR = 1.91 and 2.55. Figures 16a to 16c are two-dimensional slices of the streamwise vorticity in the near wake (x/c = 0.3) at the same instant in time. Figures 16d to 16f are slices of the spanwise vorticity at mid-span (z = S/2). We stand by the observations made in the original study: as the aspect ratio increases, the size of the inner vortex loop (formed by vortices V3 and V4) increases in streamwise direction, while the magnitude of the spanwise vorticity decreases. Figure 17 displays the history of the force coefficients over two flapping cycles, obtained with aspect ratiosAR = 1.27, 1.91, and 2.55. The mean thrust coefficient increases with the wing aspect ratio (1.17 for AR = 1.91 and 1.37 for AR = 2.55). As mentioned in Li and Dong5, this increase in the mean thrust coincides with the fact that larger aspectratio plates tend to have higher propulsive efficiency. We also note a slight increase in the magnitude of the thrust peak as we increase the aspect ratio. The authors of the original study reported a decrease in magnitude of the peak for the lift and spanwise coefficients. However, our results show a slight increase in magnitude of the second peak (each half cycle) for the lift coefficient as the ratio increases. Furthermore, the maximumvalue for the spanwise coefficient remains the same, whilewe note a decrease in the minimum value (as the ratio increases).\n4.6 Effect of the phase difference between pitching and rolling For all simulations reported so far, the phase-difference angle between the rolling and pitching motions was set to \u03c8 = 90o. We now look at the effect of the phase difference on the wake topology and propulsive performance of a circular plate (AR = 1.27) at Reynolds number Re = 200 and Strouhal number St = 0.6. We ran six additional simulations with phase-difference angles \u03c8 = 60o, 70o, 80o, 100o, 110o, and 120o.\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 18\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 19\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 20\nFigure 18 shows snapshots (lateral and side views) of the wake topology at time t/T = 4.25 for phase-difference angles \u03c8 = 100o, 110o, and 120o. (Figures 8b and 8c shows similar snapshots for \u03c8 = 90o.) Looking at the top views, we note an increase in the deflection angle \u03b3 as the phase-difference angle increases. In other words, larger phasedifference angles lead to larger deflection of the wake from the tip towards the root. We also note the wake oblique angle \u03b1 increases with the phase-difference angles. Table 8 reports thewake oblique angles andwake deflection angles computed at time t/T = 4.25 for solutions obtained with various phase-difference angles. Although values for the oblique and deflection angles differ from the original study, the trends are similar. (Note that we visually estimated these angles from the snapshots; we do not consider these measures to be very accurate but report them to show similar trend as in the original study.)\nFigure 19 shows thehistory of the force coefficients over twoflapping cycles for a circular wing with phase-difference angles between 90o and 120o. We observe an increase in the peak magnitudes for all force components as the angle increases. This increase coincides with the disappearance of the second peak in the thrust and lift forces that was reported for the baseline case (\u03c8 = 90o). Figure 20 reports the computed mean thrust coefficients and propulsive performance obtained for angles between 60o and 120o. The mean thrust coefficient increases as we increase the phase-difference angle. As in the original study, we obtained a maximum propulsive efficiency for the case with \u03c8 = 100o.\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 21\n5 Conclusion\nIn this study, we replicate the scientific findings published by Li and Dong5 using our own research software PetIBM,10 which implements a different immersed boundary method than the one in the original study. We observe similar features in the force production, wake topology, and propulsive performance of a pitching and rolling wing. Although our numerical values do not fully match those from the original study Li and Dong5, we obtain the same trends and thus consider this replication attempt to be successful. A CFD solver typically outputs the solution of primary variables. For example, PetIBM outputs the pressure and velocity fields, aswell as the body forces. We oftenusemultiple post-processing scripts to generate the final data and figures reported and analyzed in the manuscript; it involves computing secondary data, such as the vorticity field, the aerodynamic power and forces. If the code is notmade available, readers cannot inspect what has been done to produce these data; bugs introduced in these post-processing steps would go undetected. If no code is available, we cannot explain discrepancies observed between our replication and the original study. As Donoho and coworkers17 once said: \u201cThe only way we\u02bcd ever get to the bottom of such a discrepancy is if we both worked reproducibly and studied detailed differences between code and data.\u201d We made our best efforts to ensure that our replication study is reproducible. Our computational application makes use of fully open-source tools, and we created a GitHub repository* for this study. The repository contains the source code of the PetIBM application, as well as all input files of the simulations reported here, and pre- and postprocessing Python scripts. We adopted a reproducible workflow to run computational simulations; it makes use of Docker images and Singularity recipes to capture the computational environment. With Singularity, we ran container-based jobs onouruniversitymanaged HPC cluster. The GitHub repository also contains the job-submission scripts that were use to run the simulations on our cluster; they can be adapted to run on other platforms if readers are interested in reproducing our results. Admittedly, not everyone has access to an HPC cluster with GPU nodes and with Singularity installed. Lacking those resources, it becomes difficult to fully reproduce our workflow. However, we made the effort to deposit on Zenodo13 the primary data (directly output from our CFD solver) and post-processing scripts needed to reproduce the figures of the present manuscript. Once the Zenodo repository is downloaded, readers should be able to spin up a Docker container and run a Bash script to compute the secondary data and generate the figures, or generate different figures to explore the data in new ways. The Docker images produced and used for this study are stored on DockerHub\u2020, under a basic free subscription. In the event Docker adopts a policy to automatically purge inactive images (those who have not been recently downloaded) from the Hub, we have also deposited on Zenodo the Docker and Singularity images used in this study.18 Although our Dockerfiles are version-controlled on the GitHub repository, we cannot guarantee a successful re-build of the Docker images. Indeed, our Docker images rely on a base image from NVIDIA, which could very well change over time, altering the outcome of the build process (even failing it). Also, our Dockerfile makes use of the command APT-GET UPDATE, which fetches newer versions of underlying libraries. The build of a Docker image may not be reproducible given just the recipe (Dockerfile). We spent time engineering a transparent and reproducible workflow to produce the artifacts of this replication study. Surely, we cannot assert our steps will be fully reproducible in years from now; the software stack could very well become obsolete with new hardware generations. While the likelihood of the study being reproducible may decrease with the years, the transparency of the steps we took to generate the data shall remain constant.\n*PetIBM-rollingpitching: github.com/barbagroup/petibm-rollingpitching \u2020DockerHub registry: hub.docker.com/repository/docker/mesnardo/petibm-rollingpitching\nReScience C 7.1 (#7) \u2013 Mesnard and Barba 2021 22"}, {"heading": "Acknowledgments", "text": "This work was supported by NSF Grant CCF-1747669. The authors would like to thank the reviewers, Olivier Pantal\u00e9 andChengyuLi, for their detailed feedbackon themanuscript. They are also immensely grateful to the editor, KonradHinsen, for his contributions and constructive interactions."}], "title": "[Re] Three-dimensional wake topology and propulsive performance of low-aspect-ratio pitching-rolling plates", "year": 2021}